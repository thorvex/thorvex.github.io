(()=>{"use strict";class e{static async fileToDataURL(e){return await new Promise((t=>{const a=new FileReader;a.addEventListener("load",(e=>{t(e.target.result)})),a.readAsDataURL(e)}))}static async pickDir(){return await window.showDirectoryPicker()}static async readDirRecursive(t,a,r=null){r??=t.name;for await(const s of t.values())await a(s,`${r}/${s.name}`),"directory"===s.kind&&await e.readDirRecursive(s,a,`${r}/${s.name}`)}static async openFile(e,t){return await e.getFileHandle(t,{create:!0})}static async tryOpenPath(e,t){try{const a=t.split("/");let r=e;for(const e of a.slice(1,a.length-1))r=await r.getDirectoryHandle(e);return await r.getFileHandle(a.at(-1))}catch(e){return null}}static async readFileEx(e,t){const a=await e.getFile();return await a[t]()}static async readFileAsArrayBuffer(t){try{return await e.readFileEx(t,"arrayBuffer")}catch(e){return new ArrayBuffer(0)}}static async readFileAsText(t){try{return await e.readFileEx(t,"text")}catch(e){return""}}static async readFileAsJson(t){try{return await e.readFileEx(t,"json")}catch(e){return{}}}static async writeFile(e,t){const a=await e.createWritable();await a.write(t),await a.close()}}class t{static async compress(e){const t=new ReadableStream({start(t){t.enqueue(e),t.close()}}),a=new CompressionStream("deflate"),r=[],s=t.pipeThrough(a).getReader();let i;for(;!(i=await s.read()).done;)r.push(i.value);return new Uint8Array(await new Blob(r).arrayBuffer())}static async decompress(e){const t=new ReadableStream({start(t){t.enqueue(e),t.close()}}),a=new DecompressionStream("deflate"),r=[],s=t.pipeThrough(a).getReader();let i;for(;!(i=await s.read()).done;)r.push(i.value);return new Uint8Array(await new Blob(r).arrayBuffer())}}class a{static get PHashes(){return 0}static get Hashes16x16Gray(){return 1}}class r{constructor(e,t){this.handle=e,this.storageType=t}async readHashes(){let r;try{const a=await e.readFileAsArrayBuffer(this.handle),s=new Uint8Array(a),i=await t.decompress(s),n=new TextDecoder("utf-8").decode(i);r=JSON.parse(n)}catch(e){return{}}if(this.storageType===a.Hashes16x16Gray)for(const e in r){const t=r[e];r[e]={hash:new Uint8Array(t.hash),lastModified:t.lastModified}}return r}async writeHashes(r){if(this.storageType===a.Hashes16x16Gray){const e={};for(const t in r){const a=r[t];e[t]={hash:Array.from(a.hash),lastModified:a.lastModified}}r=e}const s=JSON.stringify(r),i=new TextEncoder("utf-8").encode(s),n=await t.compress(i);await e.writeFile(this.handle,n)}}class s{static async open(){return new s(await e.pickDir())}constructor(e){this.handle=e}async openFile(t,a){return new r(await e.openFile(this.handle,t),a)}}class i{static async#e(e,t,a,r){return await new Promise(((s,i)=>{const n=new Image;n.addEventListener("load",(()=>{const e=document.createElement("canvas"),i=e.getContext("2d");e.width=t,e.height=a,i.drawImage(n,0,0,e.width,e.height);const c=i.getImageData(0,0,e.width,e.height).data;s(r(c))})),n.addEventListener("error",(()=>{i()})),n.src=e}))}static async phash(t){const a=await e.fileToDataURL(t);return await i.#e(a,8,8,(e=>{const t=new Uint8Array(e.length/4);let a=0;for(let r=0,s=0;r<e.length;r+=4){const i=e[r],n=e[r+1],c=e[r+2],o=Math.floor((i+n+c)/3);t[s++]=o,a+=o}a=Math.floor(a/t.length);const r=new Uint8Array(t.length/8);for(let e=0,s=-1;e<t.length;++e)e%8==0&&++s,r[s]|=(t[e]>=a?1:0)<<e%8;return new DataView(r.buffer).getBigUint64(0,!0).toString(16).padStart(16,"0")}))}static#t(e){e=BigInt(`0x${e}`);const t=new Uint8Array(64);for(let a=0;a<t.length;++a)t[a]=Number(1n&e),e>>=1n;return t}static comparePHash(e,t){e=i.#t(e),t=i.#t(t);let a=0;for(let r=0;r<e.length;++r)a+=e[r]!==t[r]?1:0;return 1-1/e.length*a}static async hashGray16x16(t){const a=await e.fileToDataURL(t);return await i.#e(a,16,16,(e=>{const t=new Uint8Array(e.length/4);for(let a=0,r=0;a<e.length;a+=4){const s=e[a],i=e[a+1],n=e[a+2],c=Math.floor((s+i+n)/3);t[r++]=c}return t}))}static compareHashGray16x16AvgDiff(e,t){let a=0;for(let r=0;r<e.length;++r)a+=Math.abs(e[r]-t[r])/255;return 1-1/e.length*a}static compareHashGray16x16Euclid(e,t){let a=0;for(let r=0;r<e.length;++r){const s=(e[r]-t[r])/255;a+=s*s}return 1-Math.sqrt(a)/Math.sqrt(e.length)}}const n={storageDir:null,pHashes:{},hashesGray16x16:{}};async function c(t){for(;resultImages.children.length>0;){const e=resultImages.children[0];for(const t of e.querySelectorAll("img"))URL.revokeObjectURL(t.src);e.remove()}image.src.endsWith("/#")||URL.revokeObjectURL(image.src),image.src=URL.createObjectURL(t);const a={pHash:[],gray16x16AvgDiff:[],gray16x16Euclid:[]},r=await i.phash(t),s=await i.hashGray16x16(t);for(const e in n.pHashes)a.pHash.push({path:e,similarity:await i.comparePHash(r,n.pHashes[e].hash)});for(const e in n.hashesGray16x16)a.gray16x16AvgDiff.push({path:e,similarity:await i.compareHashGray16x16AvgDiff(s,n.hashesGray16x16[e].hash)}),a.gray16x16Euclid.push({path:e,similarity:await i.compareHashGray16x16Euclid(s,n.hashesGray16x16[e].hash)});for(const e in a)a[e]=a[e].sort(((e,t)=>t.similarity-e.similarity)).slice(0,25);for(let t=0;;++t){let r=!0;const s=document.createElement("tr");for(const i in a){const o=a[i][t];if(o){r=!1;const t=document.createElement("img"),a=await e.tryOpenPath(n.storageDir.handle,o.path),i=await a.getFile();t.addEventListener("click",(()=>{fetch(t.src).then((e=>e.blob())).then((e=>{imageInput.value="",c(e)}))})),t.addEventListener("contextmenu",(e=>{e.preventDefault(),window.open(t.src,"_blank")})),await new Promise((async e=>{t.src=URL.createObjectURL(i);const a=setTimeout(e,5e3);t.addEventListener("load",(()=>{clearTimeout(a),e()}))}));const h=document.createElement("td");h.innerHTML=`size: ${t.width}x${t.height}<br>similarity: ${o.similarity}<br>path: ${o.path}<br>`,h.appendChild(t),s.appendChild(h)}}if(r)break;resultImages.appendChild(s)}}imagesDirButton.addEventListener("click",(async t=>{let r;try{r=await s.open()}catch(e){return}const c=await r.openFile(".phashes.json.deflate",a.PHashes),o=await r.openFile(".hashes_gray16x16.json.deflate",a.Hashes16x16Gray),h=await c.readHashes(),l=await o.readHashes();let d=!1,w=!1;const f={};await e.readDirRecursive(r.handle,(async(e,t)=>{try{if("file"===e.kind&&t.match(/\.(jpg|jpeg|png|gif|bmp|svg|webp|tiff|tif|ico|avif)$/i)){currentImagePath.textContent=t;const a=await e.getFile(),r=h[t];if(!r||r.lastModified!==a.lastModified){const e=await i.phash(a);h[t]={hash:e,lastModified:a.lastModified},d=!0}const s=l[t];if(!s||s.lastModified!==a.lastModified){const e=await i.hashGray16x16(a);l[t]={hash:e,lastModified:a.lastModified},w=!0}f[t]=!0}}catch(e){console.error("Failed to process image:",t),console.error("Error details:",e)}})),currentImagePath.textContent="";for(const e in h)f.hasOwnProperty(e)||(delete h[e],d=!0);for(const e in l)f.hasOwnProperty(e)||(delete l[e],w=!0);d&&await c.writeHashes(h),w&&await o.writeHashes(l),n.storageDir=r,n.pHashes=h,n.hashesGray16x16=l})),image.addEventListener("click",(()=>{image.src.endsWith("/#")||window.open(image.src,"_blank")})),imageInput.addEventListener("change",(async e=>{c(e.target.files[0])})),window.addEventListener("paste",(function(e){const t=Array.from(e.clipboardData.items).find((e=>/^image\//.test(e.type))).getAsFile();imageInput.value="",c(t)}))})();